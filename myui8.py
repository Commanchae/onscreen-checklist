# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'myUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1526, 864)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setEnabled(True)
        self.frame.setGeometry(QtCore.QRect(0, 209, 231, 291))
        self.frame.setStyleSheet("QFrame{\n"
"    background-color: \"#63D3FF\";\n"
"    border: 1px solid black;\n"
"    border-radius:10px;\n"
"}\n"
"QListWidget{\n"
"    border: none;\n"
"background-color: \"#20C0FF\"\n"
"}\n"
"\n"
"QPushButton{\n"
"    background-color: \"#63D3FF\";\n"
"    border: 2px solid white;\n"
"    border-radius: 20px;\n"
"    color: white;\n"
"    font-family: Monospace \"Courier New\";\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"/*\n"
"QPushButton:hover{\n"
"    font-size: 15px;\n"
"    background-color: \"#20C0FF\";\n"
"}\n"
"*/\n"
"\n"
"QPushButton:disabled{\n"
"background-color: gray;\n"
"}\n"
"\n"
"\n"
"QPushButton#exitButton, QPushButton#minimizeButton, QPushButton#descriptionMinimizeButton{\n"
"    background-color: \"#63D3FF\";\n"
"    border-radius: 2px;\n"
"    border: 1px solid black;\n"
"    color: white;\n"
"    \n"
"}\n"
"\n"
"QPushButton#exitButtonM{\n"
"    background-color: red;\n"
"}\n"
"\n"
"")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.addButton = QtWidgets.QPushButton(self.frame)
        self.addButton.setGeometry(QtCore.QRect(16, 237, 71, 48))
        self.addButton.setStyleSheet("")
        self.addButton.setObjectName("addButton")
        self.removeButton = QtWidgets.QPushButton(self.frame)
        self.removeButton.setEnabled(False)
        self.removeButton.setGeometry(QtCore.QRect(145, 237, 71, 51))
        self.removeButton.setStyleSheet("")
        self.removeButton.setObjectName("removeButton")
        self.listWidget = QtWidgets.QListWidget(self.frame)
        self.listWidget.setGeometry(QtCore.QRect(10, 60, 211, 171))
        self.listWidget.setStyleSheet("QListWidget{\n"
"    color: white;\n"
"    font-family: Lucida\n"
"    \n"
"}\n"
"\n"
"\n"
"QScrollBar{\n"
"    background-color: \"#63D3FF\";\n"
"}\n"
"QScrollBar::add-line:horizontal {\n"
"      border: none;\n"
"      background: none;\n"
"}\n"
"\n"
"QScrollBar::sub-line:horizontal {\n"
"      border: none;\n"
"      background: none;\n"
"}\n"
"QScrollBar::handle{\n"
"    border: 1px solid \"#63DFFFF\";\n"
"    background-color: \"#20C0FF\"\n"
"}\n"
"QScrollBar::handle::pressed{\n"
"    border: 1.5px solid black;\n"
"    \n"
"}")
        self.listWidget.setObjectName("listWidget")
        self.minimizeButton = QtWidgets.QPushButton(self.frame)
        self.minimizeButton.setGeometry(QtCore.QRect(160, 20, 31, 28))
        self.minimizeButton.setObjectName("minimizeButton")
        self.exitButton = QtWidgets.QPushButton(self.frame)
        self.exitButton.setGeometry(QtCore.QRect(195, 20, 31, 28))
        self.exitButton.setStyleSheet("QPushButton#exitButton{\n"
"    background-color: red;\n"
"}")
        self.exitButton.setObjectName("exitButton")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setEnabled(True)
        self.frame_2.setGeometry(QtCore.QRect(0, 510, 241, 301))
        self.frame_2.setStyleSheet("QFrame{\n"
"    background-color: \"#63D3FF\";\n"
"    border: 1px solid black;\n"
"    border-radius: 10px;\n"
"}\n"
"/* Make code for the input boxes and the labels\n"
" */\n"
"QLabel{\n"
"    color: white;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QLineEdit{\n"
"background-color: \"#20C0FF\";\n"
"border: none;\n"
"}\n"
"\n"
"QTextEdit{\n"
"    border: none;\n"
"    background-color: \"#20C0FF\";\n"
"}\n"
"\n"
"QPushButton{\n"
"    background-color: \"#63D3FF\";\n"
"    border: 2px solid white;\n"
"    border-radius: 2px;\n"
"    color: white;\n"
"    font-family: Monospace \"Courier New\";\n"
"    font-weight: bold;\n"
"}\n"
"/*\n"
"QPushButton:hover{\n"
"    font-size: 15px;\n"
"    background-color: \"#20C0FF\";\n"
"}\n"
"*/\n"
"\n"
"QPushButton:disabled{\n"
"background-color: gray;\n"
"}")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label = QtWidgets.QLabel(self.frame_2)
        self.label.setGeometry(QtCore.QRect(10, 10, 221, 21))
        self.label.setStyleSheet("border: none;")
        self.label.setObjectName("label")
        self.titleInput = QtWidgets.QLineEdit(self.frame_2)
        self.titleInput.setGeometry(QtCore.QRect(10, 60, 211, 22))
        self.titleInput.setObjectName("titleInput")
        self.titleLabel = QtWidgets.QLabel(self.frame_2)
        self.titleLabel.setGeometry(QtCore.QRect(17, 38, 151, 21))
        self.titleLabel.setStyleSheet("border: none;")
        self.titleLabel.setObjectName("titleLabel")
        self.infoInput = QtWidgets.QTextEdit(self.frame_2)
        self.infoInput.setGeometry(QtCore.QRect(10, 110, 211, 61))
        self.infoInput.setObjectName("infoInput")
        self.infoLabel = QtWidgets.QLabel(self.frame_2)
        self.infoLabel.setGeometry(QtCore.QRect(19, 89, 151, 21))
        self.infoLabel.setStyleSheet("border: none;")
        self.infoLabel.setObjectName("infoLabel")
        self.aatdDoneButton = QtWidgets.QPushButton(self.frame_2)
        self.aatdDoneButton.setGeometry(QtCore.QRect(10, 260, 93, 28))
        self.aatdDoneButton.setObjectName("aatdDoneButton")
        self.aatdCancelButton = QtWidgets.QPushButton(self.frame_2)
        self.aatdCancelButton.setGeometry(QtCore.QRect(130, 260, 93, 28))
        self.aatdCancelButton.setStyleSheet("")
        self.aatdCancelButton.setObjectName("aatdCancelButton")
        self.importanceSlider = QtWidgets.QSlider(self.frame_2)
        self.importanceSlider.setGeometry(QtCore.QRect(20, 200, 161, 22))
        self.importanceSlider.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.importanceSlider.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.importanceSlider.setMinimum(0)
        self.importanceSlider.setMaximum(5)
        self.importanceSlider.setProperty("value", 0)
        self.importanceSlider.setOrientation(QtCore.Qt.Horizontal)
        self.importanceSlider.setObjectName("importanceSlider")
        self.importanceBar = QtWidgets.QProgressBar(self.frame_2)
        self.importanceBar.setGeometry(QtCore.QRect(20, 227, 171, 23))
        self.importanceBar.setStyleSheet("QProgressBar::chunk{\n"
"    background-color: \"#20C0FF\";\n"
"    border: 1px solid black;\n"
"    width: 30px;\n"
"    margin: 0.5px;\n"
"\n"
"}")
        self.importanceBar.setMinimum(0)
        self.importanceBar.setMaximum(5)
        self.importanceBar.setProperty("value", 0)
        self.importanceBar.setTextVisible(False)
        self.importanceBar.setObjectName("importanceBar")
        self.importanceLabel = QtWidgets.QLabel(self.frame_2)
        self.importanceLabel.setGeometry(QtCore.QRect(19, 180, 101, 16))
        self.importanceLabel.setStyleSheet("border: none;")
        self.importanceLabel.setObjectName("importanceLabel")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(1, 510, 240, 261))
        self.frame_3.setStyleSheet("QFrame{\n"
"    background-color: \"#63D3FF\";\n"
"    border: 1px solid black;\n"
"    border-radius: 10px;\n"
"}\n"
"")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.descriptionBox = QtWidgets.QTextEdit(self.frame_3)
        self.descriptionBox.setGeometry(QtCore.QRect(10, 29, 221, 191))
        self.descriptionBox.setStyleSheet("background-color: \"#20C0FF\";\n"
"font-size: 16px;\n"
"color: black;\n"
"border-radius: 10px;\n"
"border: 1px solid black;")
        self.descriptionBox.setReadOnly(True)
        self.descriptionBox.setObjectName("descriptionBox")
        self.descriptionLabel = QtWidgets.QLabel(self.frame_3)
        self.descriptionLabel.setGeometry(QtCore.QRect(5, 7, 91, 16))
        self.descriptionLabel.setStyleSheet("border: none;\n"
"color: white;\n"
"font-weight: bold;")
        self.descriptionLabel.setObjectName("descriptionLabel")
        self.descriptionImportanceBar = QtWidgets.QProgressBar(self.frame_3)
        self.descriptionImportanceBar.setGeometry(QtCore.QRect(10, 230, 220, 23))
        self.descriptionImportanceBar.setStyleSheet("QProgressBar::chunk{\n"
"    background-color: \"red\";\n"
"    border: 1px solid black;\n"
"    width: 40px;\n"
"    margin: 0.5px;\n"
"\n"
"}")
        self.descriptionImportanceBar.setMaximum(5)
        self.descriptionImportanceBar.setProperty("value", 5)
        self.descriptionImportanceBar.setTextVisible(False)
        self.descriptionImportanceBar.setObjectName("descriptionImportanceBar")
        self.returnButton = QtWidgets.QPushButton(self.centralwidget)
        self.returnButton.setGeometry(QtCore.QRect(0, 420, 21, 171))
        self.returnButton.setStyleSheet("QPushButton{\n"
"    color: white;\n"
"    background-color: \"#63D3FF\";\n"
"    font-size: 20px;\n"
"    border: 1px solid black;\n"
"    border-radius:5px;\n"
"\n"
"    \n"
"}")
        self.returnButton.setObjectName("returnButton")
        self.descriptionMinimizeButton = QtWidgets.QPushButton(self.centralwidget)
        self.descriptionMinimizeButton.setGeometry(QtCore.QRect(245, 510, 31, 30))
        self.descriptionMinimizeButton.setStyleSheet("QPushButton#descriptionMinimizeButton{\n"
"    background-color: \"#63D3FF\";\n"
"    border-radius: 2px;\n"
"    border: 1px solid black;\n"
"    color: white;\n"
"    \n"
"}")
        self.descriptionMinimizeButton.setObjectName("descriptionMinimizeButton")
        self.sortByBox = QtWidgets.QComboBox(self.centralwidget)
        self.sortByBox.setGeometry(QtCore.QRect(17, 230, 139, 28))
        self.sortByBox.setStyleSheet("QComboBox#sortByBox{\n"
"    background-color: \"#20C0FF\";\n"
"    color: white;\n"
"    border: 1px solid black;\n"
"    border-radius: 3px;\n"
"}\n"
"QComboBox::item{\n"
"    background-color: \"#20C0FF\";\n"
"    color: white;\n"
"}")
        self.sortByBox.setObjectName("sortByBox")
        self.sortByBox.addItem("")
        self.sortByBox.addItem("")
        self.sortByLabel = QtWidgets.QLabel(self.centralwidget)
        self.sortByLabel.setGeometry(QtCore.QRect(17, 211, 55, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.sortByLabel.setFont(font)
        self.sortByLabel.setObjectName("sortByLabel")
        self.returnButton.raise_()
        self.frame.raise_()
        self.frame_2.raise_()
        self.descriptionMinimizeButton.raise_()
        self.sortByBox.raise_()
        self.sortByLabel.raise_()
        self.frame_3.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

 # Comment code and make it readable.
        # Possibly add a minimize button for the description box.
        MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint | QtCore.Qt.WindowStaysOnTopHint)
        MainWindow.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        MainWindow.showMaximized()

        self.to_do_list = []
        self.selectedItem = None
        self.returnButton.setHidden(True)
        self.descriptionMinimizeButton.setHidden(True)

        def minimizeUI():
                self.frame.setHidden(True)
                self.minimizeButton.setHidden(True)
                self.exitButton.setHidden(True)
                self.frame_2.setHidden(True)
                self.frame_3.setHidden(True)
                self.descriptionMinimizeButton.setHidden(True)
                self.returnButton.setHidden(False)

                self.sortByBox.setHidden(True)
                self.sortByLabel.setHidden(True)
        
        def returnUI():
                self.frame.setHidden(False)
                self.returnButton.setHidden(True)
                self.minimizeButton.setHidden(False)
                self.exitButton.setHidden(False)
                self.sortByBox.setHidden(False)
                self.sortByLabel.setHidden(False)

        def setAATDFrame(value):
                self.frame_2.setHidden(value)

        def addToDo(flag):
                if (flag != "cancel"):
                        self.to_do_list.append({"TITLE": self.titleInput.text(), "INFO": self.infoInput.toPlainText(), "IMPORTANCE": self.importanceSlider.value()})
                        self.listWidget.addItem(" • " + self.titleInput.text() + " | IMP: " + str(self.importanceSlider.value()))
                self.infoInput.clear()
                self.titleInput.setText("")
                self.importanceSlider.setValue(0)
                self.importanceBar.setValue(0)
                setAATDFrame(True)

        def removeItem():
                currentRowValue = self.listWidget.currentRow()
                self.listWidget.takeItem(currentRowValue)
                del self.to_do_list[currentRowValue]
                self.removeButton.setEnabled(False)
                self.frame_3.setHidden(True)
                self.descriptionMinimizeButton.setHidden(True)
                self.descriptionBox.setText("")

        def listWidgetClicked(item):
                currentRowValue = self.listWidget.currentRow()
                self.selectedItem = self.to_do_list[currentRowValue]
                self.removeButton.setEnabled(True)
                self.frame_2.setHidden(True)
                self.frame_3.setHidden(False)
                self.descriptionMinimizeButton.setHidden(False)
                self.descriptionBox.setText(self.selectedItem["INFO"])
                self.descriptionImportanceBar.setValue(self.selectedItem["IMPORTANCE"])
                
        def addButtonClicked():
                setAATDFrame(False)
                self.frame_3.setHidden(True)

        def minimizeDescription():
                self.descriptionMinimizeButton.setHidden(True)
                self.frame_3.setHidden(True)
                self.descriptionBox.setText("")

        # Add Button Animation --> DO IT LAST

        def importanceSliderChanged():
                self.importanceBar.setValue(self.importanceSlider.value())

        setAATDFrame(True)
        self.frame_3.setHidden(True)
        self.addButton.clicked.connect(lambda: addButtonClicked())
        self.aatdDoneButton.clicked.connect(lambda: addToDo(""))
        self.aatdCancelButton.clicked.connect(lambda: addToDo("cancel"))
        self.minimizeButton.clicked.connect(lambda: minimizeUI())
        self.returnButton.clicked.connect(lambda: returnUI())
        self.exitButton.clicked.connect(lambda: exit())
        self.listWidget.itemClicked.connect(lambda item: listWidgetClicked(item))
        self.removeButton.clicked.connect(lambda: removeItem())
        self.descriptionMinimizeButton.clicked.connect(lambda: minimizeDescription())
        self.importanceSlider.valueChanged.connect(lambda: importanceSliderChanged())


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.addButton.setText(_translate("MainWindow", "ADD"))
        self.removeButton.setText(_translate("MainWindow", "REMOVE"))
        self.minimizeButton.setText(_translate("MainWindow", "-"))
        self.exitButton.setText(_translate("MainWindow", "X"))
        self.label.setText(_translate("MainWindow", "ADD A TO-DO"))
        self.titleLabel.setText(_translate("MainWindow", "TITLE:"))
        self.infoLabel.setText(_translate("MainWindow", "INFO:"))
        self.aatdDoneButton.setText(_translate("MainWindow", "DONE"))
        self.aatdCancelButton.setText(_translate("MainWindow", "CANCEL"))
        self.importanceLabel.setText(_translate("MainWindow", "IMPORTANCE:"))
        self.descriptionLabel.setText(_translate("MainWindow", "DESCRIPTION"))
        self.returnButton.setText(_translate("MainWindow", "O"))
        self.descriptionMinimizeButton.setText(_translate("MainWindow", "-"))
        self.sortByBox.setItemText(0, _translate("MainWindow", "IMPORTANCE"))
        self.sortByBox.setItemText(1, _translate("MainWindow", "DATE"))
        self.sortByLabel.setText(_translate("MainWindow", "SORT BY:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
